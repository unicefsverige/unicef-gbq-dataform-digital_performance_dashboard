config {
  type: "view",
  schema: constants.STAGING_DATASET,
  description: "The GA4 users view with some user-kevel metrics and attribution",
  tags:["ga4"]
}

with 
  users as (
    select
      user_key,

      --user first traffic source
      array_agg(
        if(coalesce(nullif(collected_traffic_source.fixed_source, '(direct)'), nullif(collected_traffic_source.fixed_medium, '(none)'), nullif(collected_traffic_source.fixed_campaign, '(direct)')) is not null,
           collected_traffic_source,
           null
          ) ignore nulls
          order by
            event_timestamp asc,
            event_sort_order asc
          limit 1
      ) [safe_offset(0)] as first_user_traffic_source,

      count(distinct ga_session_key) as n_of_visits_per_user,
      count(distinct transaction_id) as n_of_transactions_per_user,
      count(distinct exp_variant_string) as n_optimizely_experiments_per_user,
      sum(ecommerce.purchase_revenue) as total_revenue_per_user,
      sum(ecommerce.purchase_revenue_in_usd) as total_revenue_per_user_in_usd,
      min(user_first_touch_timestamp) as user_first_touch_timestamp,
      min(datetime(timestamp_seconds(cast(user_first_touch_timestamp / 1000000 as int64)), '${constants.GA4_REPORTING_TIME_ZONE}')) as user_first_visit_datetime,
      min(date(timestamp_seconds(cast(user_first_touch_timestamp / 1000000 as int64)), '${constants.GA4_REPORTING_TIME_ZONE}')) as user_first_visit_date,
      max(datetime(timestamp_seconds(cast(user_first_touch_timestamp / 1000000 as int64)), '${constants.GA4_REPORTING_TIME_ZONE}')) as user_last_visit_datetime,
      max(date(timestamp_seconds(cast(user_first_touch_timestamp / 1000000 as int64)), '${constants.GA4_REPORTING_TIME_ZONE}')) as user_last_visit_date

    from ${ref('stg_ga4_events_fixed')}
    where user_key is not null
    group by all
)


select
  *
from
  users